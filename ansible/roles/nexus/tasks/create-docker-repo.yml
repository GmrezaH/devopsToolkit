---
- name: Check if the repository exists | docker {{ item.type }} repository
  uri:
    url: "{{ nexus_main_url }}/service/rest/v1/repositories/docker/{{ item.type }}/{{ item.name }}"
    method: GET
    user: "{{ nexus_username }}"
    password: "{{ nexus_password }}"
    force_basic_auth: yes
    status_code: 200
    validate_certs: false
  register: docker_repo_check_response
  failed_when: docker_repo_check_response.status not in [200, 404]
  ignore_errors: true
  tags:
    - setup_nexus
    - config_nexus
    - create_docker_repo

- name: Create docker {{ item.type }} repository
  uri:
    url: "{{ nexus_main_url }}/service/rest/v1/repositories/docker/{{ item.type }}"
    user: "{{ nexus_username }}"
    password: "{{ nexus_password }}"
    method: POST
    force_basic_auth: yes
    status_code: 201
    validate_certs: false
    body_format: json
    headers:
      Content-Type: "application/json"
    body: >-
      {
        "name": "{{ item.name }}",
        "online": true,
        "storage": {
          "blobStoreName": "{{ item.blob }}",
          "strictContentTypeValidation": true
          {% if item.type == 'hosted' %}
          ,
          "writePolicy": "{{ item.write_policy | default('ALLOW_ONCE') }}",
          "latestPolicy": true
        },
        "component": {
          "proprietaryComponents": true
          {% endif %}
        },
        "cleanup": {
          "policyNames": [
            "{{ item.cleanup_policy }}"
          ]
        },
        "docker": {
          "v1Enabled": true,
          "forceBasicAuth": false,
          "httpPort": "{{ item.repo_port }}",
          "httpsPort": "",
          "subdomain": ""
        {% if item.type == 'proxy' %}
        },
        "dockerProxy": {
          "indexType": "{{ item.index_type}}",
        },
        "proxy": {
          "remoteUrl": "{{ item.remote_url }}",
          "contentMaxAge": 1440,
          "metadataMaxAge": 1440
        },
        "negativeCache": {
          "enabled": true,
          "timeToLive": 1440
        },
        "httpClient": {
          "blocked": false,
          "autoBlock": false,
        {% endif %}
        }
      }
  when: docker_repo_check_response.status != 200
  tags:
    - setup_nexus
    - config_nexus
    - create_docker_repo

