nameOverride: ""
namespaceOverride: ""
kubeTargetVersionOverride: "1.32.5"
kubeVersionOverride: ""
fullnameOverride: ""

crds:
  enabled: true
  upgradeJob:
    enabled: true
    forceConflicts: false
    image:
      busybox:
        registry: docker.io
        repository: busybox
        tag: "latest"
        sha: ""
        pullPolicy: IfNotPresent
      kubectl:
        registry: registry.k8s.io
        repository: kubectl
        tag: ""  # defaults to the Kubernetes version
        sha: ""
        pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 100m
        memory: 128Mi
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
    podSecurityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault

global:
  rbac:
    create: true
    createAggregateClusterRoles: true
  imageRegistry: ""
  imagePullSecrets: []

alertmanager:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: cluster-ca-issuer
      # certmanager.k8s.io/acme-http01-edit-in-place: "false"
      # kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/auth-realm: Authentication Required
      nginx.ingress.kubernetes.io/auth-secret: prometheus-auth
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/affinity: cookie
    hosts:
      - alertmanager.testbed.moh
    tls:
      - secretName: alertmanager.testbed.moh-secret-tls
        hosts:
        - alertmanager.testbed.moh

  alertmanagerSpec:
    image:
      registry: quay.io
      repository: prometheus/alertmanager
      tag: v0.28.1
      sha: ""
      pullPolicy: IfNotPresent
    replicas: 1
    retention: 120h
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: ceph-block
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 2Gi

    ## Define resources requests and limits for single Pods.
    ## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    ##
    resources: {}
    # requests:
    #   memory: 400Mi

    securityContext:
      runAsGroup: 2000
      runAsNonRoot: true
      runAsUser: 1000
      fsGroup: 2000
      seccompProfile:
        type: RuntimeDefault


grafana:
  enabled: true
  defaultDashboardsTimezone: Asia/Tehran
  defaultDashboardsEditable: true
  adminUser: admin
  adminPassword: Mrgh@21123
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: cluster-ca-issuer
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - grafana.testbed.moh
    path: /
    tls:
      - secretName: grafana.testbed.moh-secret-tls
        hosts:
        - grafana.testbed.moh
  persistence:
    enabled: true
    type: sts
    storageClassName: "ceph-block"
    accessModes:
      - ReadWriteOnce
    size: 2Gi
    finalizers:
      - kubernetes.io/pvc-protection

  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"
      folderAnnotation: grafana_folder
      searchNamespace: ALL
      provider:
        allowUiUpdates: true
        foldersFromFilesStructure: true
    datasources:
      enabled: true
      defaultDatasourceEnabled: true
      isDefaultDatasource: true
      name: Prometheus
      uid: prometheus
      prometheusServiceName: prometheus-operated
      label: grafana_datasource
      labelValue: "1"
      alertmanager:
        enabled: true
        name: Alertmanager
        uid: alertmanager
        handleGrafanaManagedAlerts: false
        implementation: prometheus

kubernetesServiceMonitors:
  enabled: true

kubeApiServer:
  enabled: true

kubelet:
  enabled: true
  namespace: kube-system

kubeControllerManager:
  enabled: true
  service:
    enabled: true
    targetPort: 10257
  serviceMonitor:
    enabled: true
    https: true
    insecureSkipVerify: true

coreDns:
  enabled: true

kubeEtcd:
  enabled: true
  service:
    enabled: false
  serviceMonitor:
    enabled: true
    # selectors in kubespray etcd_metrics_service_labels
    selector:
      matchLabels:
        k8s-app: etcd
        app.kubernetes.io/managed-by: Kubespray
        app: kube-prometheus-stack-kube-etcd
        release: kube-prometheus-stack
        # component: etcd

kubeScheduler:
  enabled: true
  service:
    enabled: true
    port: 10259
    targetPort: 10259
  serviceMonitor:
    enabled: true
    https: true
    insecureSkipVerify: true

## If cilium_kube_proxy_replacement: true, disable scraping kube proxy
kubeProxy:
  enabled: false
  service:
    enabled: true
    port: 10249
    targetPort: 10249
  serviceMonitor:
    enabled: true

kubeStateMetrics:
  enabled: true

nodeExporter:
  enabled: true
  operatingSystems:
    linux:
      enabled: true
    aix:
      enabled: true
    darwin:
      enabled: true

prometheus:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: cluster-ca-issuer
      # certmanager.k8s.io/acme-http01-edit-in-place: "false"
      # kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/auth-realm: Authentication Required
      nginx.ingress.kubernetes.io/auth-secret: prometheus-auth
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/affinity: cookie
    hosts:
      - prometheus.testbed.moh
    tls:
      - secretName: prometheus.testbed.moh-secret-tls
        hosts:
          - prometheus.testbed.moh

  prometheusSpec:
    secrets: []
      # - etcd-client-cert
    retention: 15d
    retentionSize: "15GiB"
    resources:
      requests:
        cpu: 300m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 4Gi
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ceph-block
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 16Gi
    securityContext:
      runAsGroup: 2000
      runAsNonRoot: true
      runAsUser: 1000
      fsGroup: 2000
      seccompProfile:
        type: RuntimeDefault
