networks:
  proxy:
    name: proxy
    external: true
  app:
    name: app
    external: true

volumes:
  nexus_data:
    name: nexus_data
    external: false

services:
  nexus:
    image: sonatype/nexus3:${IMAGE_TAG}
    container_name: nexus
    hostname: nexus
    restart: ${RESTART_POLICY}
    volumes:
      - nexus_data:/nexus-data
    environment:
      NEXUS_SECURITY_INITIAL_PASSWORD: ${NEXUS_ADMIN_PASSWORD}
    networks:
      - proxy
      - app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/service/rest/v1/status"]
      interval: 30s
      retries: 3
      timeout: 10s
      start_period: 30s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.http-repo.rule=Host(`${NEXUS_MAIN_DOMAIN}`)"
      - "traefik.http.routers.http-repo.entrypoints=web"
      - "traefik.http.routers.repo.rule=Host(`${NEXUS_MAIN_DOMAIN}`)"
      - "traefik.http.routers.repo.entrypoints=web-secure"
      - "traefik.http.routers.repo.tls=true"
      - "traefik.http.routers.repo.tls.certresolver=myresolver"
      - "traefik.http.routers.repo.service=repo"
      - "traefik.http.services.repo.loadBalancer.server.port=8081"
{% if create_docker_repository is defined %}
{% for repo in create_docker_repository %}
      - "traefik.http.routers.http-{{ repo.name }}.rule=Host(`{{ repo.repo_domain }}`)"
      - "traefik.http.routers.http-{{ repo.name }}.entrypoints=web"
      - "traefik.http.routers.{{ repo.name }}.rule=Host(`{{ repo.repo_domain }}`)"
      - "traefik.http.routers.{{ repo.name }}.entrypoints=web-secure"
      - "traefik.http.routers.{{ repo.name }}.tls=true"
      - "traefik.http.routers.{{ repo.name }}.tls.certresolver=myresolver"
      - "traefik.http.routers.{{ repo.name }}.service={{ repo.name }}"
      - "traefik.http.services.{{ repo.name }}.loadBalancer.server.port={{ repo.repo_port }}"
{% endfor %}
{% endif %}
